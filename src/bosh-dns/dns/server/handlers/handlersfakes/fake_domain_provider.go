// Code generated by counterfeiter. DO NOT EDIT.
package handlersfakes

import (
	"bosh-dns/dns/server/handlers"
	"sync"
)

type FakeDomainProvider struct {
	DomainsStub        func() []string
	domainsMutex       sync.RWMutex
	domainsArgsForCall []struct{}
	domainsReturns     struct {
		result1 []string
	}
	domainsReturnsOnCall map[int]struct {
		result1 []string
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeDomainProvider) Domains() []string {
	fake.domainsMutex.Lock()
	ret, specificReturn := fake.domainsReturnsOnCall[len(fake.domainsArgsForCall)]
	fake.domainsArgsForCall = append(fake.domainsArgsForCall, struct{}{})
	fake.recordInvocation("Domains", []interface{}{})
	fake.domainsMutex.Unlock()
	if fake.DomainsStub != nil {
		return fake.DomainsStub()
	}
	if specificReturn {
		return ret.result1
	}
	return fake.domainsReturns.result1
}

func (fake *FakeDomainProvider) DomainsCallCount() int {
	fake.domainsMutex.RLock()
	defer fake.domainsMutex.RUnlock()
	return len(fake.domainsArgsForCall)
}

func (fake *FakeDomainProvider) DomainsReturns(result1 []string) {
	fake.DomainsStub = nil
	fake.domainsReturns = struct {
		result1 []string
	}{result1}
}

func (fake *FakeDomainProvider) DomainsReturnsOnCall(i int, result1 []string) {
	fake.DomainsStub = nil
	if fake.domainsReturnsOnCall == nil {
		fake.domainsReturnsOnCall = make(map[int]struct {
			result1 []string
		})
	}
	fake.domainsReturnsOnCall[i] = struct {
		result1 []string
	}{result1}
}

func (fake *FakeDomainProvider) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.domainsMutex.RLock()
	defer fake.domainsMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeDomainProvider) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ handlers.DomainProvider = new(FakeDomainProvider)
