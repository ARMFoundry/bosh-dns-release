package handler

import (
	"fmt"
	bosherr "github.com/cloudfoundry/bosh-utils/errors"
	boshsys "github.com/cloudfoundry/bosh-utils/system"
	"regexp"
	"strings"
)

var warningLine = "# This file is automatically generated and overwritten by bosh-dns"

var nameserverLineRegex = regexp.MustCompile("^nameserver (.+)")

type ResolvConfHandler struct {
	address string
	fs      boshsys.FileSystem
}

func NewResolvConfHandler(address string, fileSys boshsys.FileSystem) ResolvConfHandler {
	return ResolvConfHandler{address: address, fs: fileSys}
}

func (c ResolvConfHandler) Apply() error {
	writeString := fmt.Sprintf(`%s
nameserver %s
`, warningLine, c.address)

	err := c.fs.WriteFileString("/etc/resolv.conf", writeString)
	if err != nil {
		return bosherr.WrapError(err, "Writing resolv.conf")
	}

	return nil
}

func (c ResolvConfHandler) IsCorrect() (bool, error) {
	contents, err := c.fs.ReadFileString("/etc/resolv.conf")
	if err != nil {
		return false, bosherr.WrapError(err, "Reading resolv.conf")
	}

	lines := strings.Split(contents, "\n")

	for _, l := range lines {
		if !nameserverLineRegex.MatchString(l) {
			continue
		}

		if l == fmt.Sprintf("nameserver %s", c.address) {
			return true, nil
		}

		return false, nil
	}

	return false, nil
}
