diff --git a/src/bosh-dns/vendor/github.com/coredns/coredns/middleware/cache/cache.go b/src/bosh-dns/vendor/github.com/coredns/coredns/middleware/cache/cache.go
index 434efa2..c0b4933 100644
--- a/src/bosh-dns/vendor/github.com/coredns/coredns/middleware/cache/cache.go
+++ b/src/bosh-dns/vendor/github.com/coredns/coredns/middleware/cache/cache.go
@@ -34,6 +34,13 @@ type Cache struct {
 	percentage int
 }
 
+func NewCache() *Cache {
+	ca := &Cache{pcap: defaultCap, ncap: defaultCap, pttl: maxTTL, nttl: maxNTTL, prefetch: 0, duration: 1 * time.Minute}
+	ca.pcache = cache.New(ca.pcap)
+	ca.ncache = cache.New(ca.ncap)
+	return ca
+}
+
 // Return key under which we store the item, -1 will be returned if we don't store the
 // message.
 // Currently we do not cache Truncated, errors zone transfers or dynamic update messages.
@@ -108,9 +115,6 @@ func (w *ResponseWriter) WriteMsg(res *dns.Msg) error {
 
 	if key != -1 {
 		w.set(res, key, mt, duration)
-
-		cacheSize.WithLabelValues(Success).Set(float64(w.pcache.Len()))
-		cacheSize.WithLabelValues(Denial).Set(float64(w.ncache.Len()))
 	}
 
 	if w.prefetch {
diff --git a/src/bosh-dns/vendor/github.com/coredns/coredns/middleware/cache/handler.go b/src/bosh-dns/vendor/github.com/coredns/coredns/middleware/cache/handler.go
index 90c63d9..f2355d3 100644
--- a/src/bosh-dns/vendor/github.com/coredns/coredns/middleware/cache/handler.go
+++ b/src/bosh-dns/vendor/github.com/coredns/coredns/middleware/cache/handler.go
@@ -7,7 +7,6 @@ import (
 	"github.com/coredns/coredns/request"
 
 	"github.com/miekg/dns"
-	"github.com/prometheus/client_golang/prometheus"
 	"golang.org/x/net/context"
 )
 
@@ -67,53 +66,11 @@ func (c *Cache) get(now time.Time, qname string, qtype uint16, do bool) (*item,
 	k := hash(qname, qtype, do)
 
 	if i, ok := c.ncache.Get(k); ok {
-		cacheHits.WithLabelValues(Denial).Inc()
 		return i.(*item), i.(*item).ttl(now)
 	}
 
 	if i, ok := c.pcache.Get(k); ok {
-		cacheHits.WithLabelValues(Success).Inc()
 		return i.(*item), i.(*item).ttl(now)
 	}
-	cacheMisses.Inc()
 	return nil, 0
 }
-
-var (
-	cacheSize = prometheus.NewGaugeVec(prometheus.GaugeOpts{
-		Namespace: middleware.Namespace,
-		Subsystem: subsystem,
-		Name:      "size",
-		Help:      "The number of elements in the cache.",
-	}, []string{"type"})
-
-	cacheCapacity = prometheus.NewGaugeVec(prometheus.GaugeOpts{
-		Namespace: middleware.Namespace,
-		Subsystem: subsystem,
-		Name:      "capacity",
-		Help:      "The cache's capacity.",
-	}, []string{"type"})
-
-	cacheHits = prometheus.NewCounterVec(prometheus.CounterOpts{
-		Namespace: middleware.Namespace,
-		Subsystem: subsystem,
-		Name:      "hits_total",
-		Help:      "The count of cache hits.",
-	}, []string{"type"})
-
-	cacheMisses = prometheus.NewCounter(prometheus.CounterOpts{
-		Namespace: middleware.Namespace,
-		Subsystem: subsystem,
-		Name:      "misses_total",
-		Help:      "The count of cache misses.",
-	})
-)
-
-const subsystem = "cache"
-
-func init() {
-	prometheus.MustRegister(cacheSize)
-	prometheus.MustRegister(cacheCapacity)
-	prometheus.MustRegister(cacheHits)
-	prometheus.MustRegister(cacheMisses)
-}
diff --git a/src/bosh-dns/vendor/github.com/coredns/coredns/middleware/cache/setup.go b/src/bosh-dns/vendor/github.com/coredns/coredns/middleware/cache/setup.go
index 65cfb70..27da3d7 100644
--- a/src/bosh-dns/vendor/github.com/coredns/coredns/middleware/cache/setup.go
+++ b/src/bosh-dns/vendor/github.com/coredns/coredns/middleware/cache/setup.go
@@ -29,10 +29,6 @@ func setup(c *caddy.Controller) error {
 		return ca
 	})
 
-	// Export the capacity for the metrics. This only happens once, because this is a re-load change only.
-	cacheCapacity.WithLabelValues(Success).Set(float64(ca.pcap))
-	cacheCapacity.WithLabelValues(Denial).Set(float64(ca.ncap))
-
 	return nil
 }
 
