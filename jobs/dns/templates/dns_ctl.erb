#!/bin/bash -exu

RUN_DIR=/var/vcap/sys/run/dns
PIDFILE=$RUN_DIR/dns.pid
LOG_DIR=/var/vcap/sys/log/dns
JOB_DIR=/var/vcap/jobs/dns
DNS_PACKAGE=/var/vcap/packages/dns
SCRIPT_NAME=dns_ctl

function start_logging() {
  exec > >(prepend_datetime >> $LOG_DIR/${SCRIPT_NAME}.stdout.log)
  exec 2> >(prepend_datetime >> $LOG_DIR/${SCRIPT_NAME}.stderr.log)
}

function prepend_datetime() {
  awk -W interactive '{ system("echo -n [$(date +\"%Y-%m-%d %H:%M:%S%z\")]"); print " " $0 }'
}

function pid_exists() {
  ps -p $1 &> /dev/null
}

function create_directories_and_chown_to_vcap() {
  mkdir -p "${LOG_DIR}"
  chown -R vcap:vcap "${LOG_DIR}"

  mkdir -p "${RUN_DIR}"
  chown -R vcap:vcap "${RUN_DIR}"
}

function start_dns() {
  setcap cap_net_bind_service=+ep ${DNS_PACKAGE}/bin/dns

  chpst -u vcap:vcap \
    "${DNS_PACKAGE}/bin/dns" \
    --config "${JOB_DIR}/config/config.json" \
    1>> ${LOG_DIR}/dns.stdout.log \
    2>> ${LOG_DIR}/dns.stderr.log &

   echo $! > $PIDFILE
}

function stop_dns() {
  local pid

  if [ -e $PIDFILE ]
  then
    pid=$(head -1 $PIDFILE)
  else
    exit 0
  fi

  if [ -e /proc/$pid ]
  then
    set +e
    kill -9 $pid
    set -e
  fi

  rm -f $PIDFILE
}

function main() {
  create_directories_and_chown_to_vcap
  start_logging

  case ${1} in
    start)
      start_dns
      ;;

    stop)
      stop_dns
      ;;

    *)
      echo "Usage: ${0} {start|stop}"
      ;;
  esac
}

main $@
