#!/bin/bash -exu

RUN_DIR=/var/vcap/sys/run/dns
PIDFILE=$RUN_DIR/dns.pid
LOG_DIR=/var/vcap/sys/log/dns
JOB_DIR=/var/vcap/jobs/dns
DNS_PACKAGE=/var/vcap/packages/dns
SCRIPT_NAME=dns_ctl

exec > >(tee -a >(logger -p user.info -t vcap.${SCRIPT_NAME}.stdout) | sed -e "s/^/[`date +\"%Y-%m-%d %H:%M:%S%z\"`] /" >> $LOG_DIR/${SCRIPT_NAME}.log)
exec 2> >(tee -a >(logger -p user.error -t vcap.${SCRIPT_NAME}.stderr) |  sed -e "s/^/[`date +\"%Y-%m-%d %H:%M:%S%z\"`] /" >> $LOG_DIR/${SCRIPT_NAME}.err.log)

function pid_exists() {
  ps -p $1 &> /dev/null
}

function start_dns() {
  "${DNS_PACKAGE}/bin/dns" \
    --config "${JOB_DIR}/config/config.json" \
    1> ${LOG_DIR}/dns.stdout.log \
    2> ${LOG_DIR}/dns.stderr.log &

   echo $! > $PIDFILE
}

function stop_dns() {
  local pid

  if [ -e $PIDFILE ]
  then
    pid=$(head -1 $PIDFILE)
  else
    exit 0
  fi

  if [ ! -z $pid ] && pid_exists $pid; then
    set +e
    kill $pid
    set -e
  fi

  local tries
  tries=0

  while [ -e /proc/$pid ]
  do
    tries=$(( $tries + 1 ))

    if [ $tries -gt 100 ]; then
      set +e
      kill -9 $PID
      set -e
    fi

    sleep 0.1
  done

  rm -f $PIDFILE
}

function main() {
  case ${1} in
        start)
          start_dns
          ;;

        stop)
          stop_dns
          ;;

        *)
    echo "Usage: ${0} {start|stop}"
          ;;
  esac
}

main $@
