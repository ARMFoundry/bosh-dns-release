<% if p('health.enabled') %>
  try {
      New-NetFirewallRule -DisplayName "bosh health server TCP" -Direction Inbound -LocalPort <%= p('health.server.port') %> -Protocol TCP
  } catch {
      $Host.UI.WriteErrorLine($_.Exception.Message)
      Exit 1
  }
<% end %>

Get-NetIPAddress -IPAddress <%= p('aliased_address') %>

if ($? -eq $False) {
  $loopbackInterfaceIndex = Get-NetIPInterface -InterfaceAlias *loopback* | Select-Object -First 1 ifi* | foreach {$_.ifIndex}

  Write-host "Found loopback interface at InterfaceIndex ${loopbackInterfaceIndex}"
  New-NetIPAddress -InterfaceIndex $loopbackInterfaceIndex -IPAddress <%= p('aliased_address') %>
}

$ErrorActionPreference = "Stop";
trap { $host.SetShouldExit(1) }

try {
  Clear-DnsClientCache
} catch {
  $Host.UI.WriteErrorLine($_.Exception.Message)
  Exit 1
}


$RegistryPath = "HKLM:\SYSTEM\CurrentControlSet\Services\Dnscache\Parameters"
$ExpectedValue = 0
$Value = Get-ItemProperty -Path $RegistryPath
if ($Value.MaxNegativeCacheTtl -ne $ExpectedValue) {
  Set-ItemProperty -Path $RegistryPath -Name MaxNegativeCacheTtl -Value $ExpectedValue -Type DWord
  $Value = Get-ItemProperty -Path $RegistryPath
  if ($Value.MaxNegativeCacheTtl -ne $ExpectedValue) {
    Write-Error "Error: Expected MaxNegativeCacheTtl to be '${ExpectedValue}', got '${Value.MaxNegativeCacheTtl}'"
  }
}
<% if p('enable_os_dns_caching') %>
  # Reset the MaxCacheTtl to the default: https://technet.microsoft.com/en-us/library/cc959926.aspx
  Set-ItemProperty -Path $RegistryPath -Name MaxCacheTtl -Value 0x15180 -Type DWord
  $status = (Get-Service Dnscache).Status
  if ($status -ne "Running") {
     Write-Error "Error: Expected Dnscache Service to be Running, got $status"
  }
  $startType = (Get-Service Dnscache).StartType
  if ($startType -ne "Automatic") {
     Write-Error "Error: Expected Dnscache StartupType to be Automatic, got $startType"
  }
<% else %>
  Set-ItemProperty -Path $RegistryPath -Name MaxCacheTtl -Value 0 -Type DWord
<% end %>

Exit 0
