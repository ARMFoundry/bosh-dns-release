. ./exiter.ps1

$ErrorActionPreference = "Stop";
trap { $host.SetShouldExit(1) }

$BOSH_INSTALL_TARGET = Resolve-Path "${env:BOSH_INSTALL_TARGET}"

$env:GOROOT="C:\var\vcap\packages\golang-windows\go"
$env:GOPATH="${BOSH_INSTALL_TARGET}"
$env:PATH="${env:GOROOT}\bin;${env:PATH}"
$pkg_path="github.com\cloudfoundry\dns-release\src\dns"

New-Item -ItemType "directory" -Force "${BOSH_INSTALL_TARGET}\src\github.com\cloudfoundry\dns-release\src"
robocopy /E . "${BOSH_INSTALL_TARGET}\src\github.com\cloudfoundry\dns-release\src\"
if ($LASTEXITCODE -ge 8) {
    Write-Error "robocopy /E . ${BOSH_INSTALL_TARGET}\src\github.com\cloudfoundry\dns-release\src\"
}

go.exe install "${pkg_path}"
if ($LASTEXITCODE -ne 0) {
    Write-Error "Error compiling: ${pkg_path}"
}

go.exe install "${pkg_path}\nameserverconfig"
if ($LASTEXITCODE -ne 0) {
    Write-Error "Error compiling: ${pkg_path}\nameserverconfig"
}

New-Item -ItemType "directory" -Force "emptyfolder"
robocopy /PURGE "emptyfolder" "${BOSH_INSTALL_TARGET}/src"
if ($LASTEXITCODE -ge 8) {
    Write-Error "robocopy /PURGE emptyfolder ${BOSH_INSTALL_TARGET}/src"
}

robocopy /PURGE "emptyfolder" "${BOSH_INSTALL_TARGET}/pkg"
if ($LASTEXITCODE -ge 8) {
    Write-Error "robocopy /PURGE emptyfolder ${BOSH_INSTALL_TARGET}/pkg"
}

robocopy "dns\nameserverconfig\assets" "${BOSH_INSTALL_TARGET}/bin" "*.ps1"
if ($LASTEXITCODE -ge 8) {
    Write-Error "robocopy dns\nameserverconfig\assets\*.ps1 ${BOSH_INSTALL_TARGET}/bin"
}

Remove-Item -Force -Recurse "${BOSH_INSTALL_TARGET}/src"
Remove-Item -Force -Recurse "${BOSH_INSTALL_TARGET}/pkg"
Remove-Item -Force -Recurse "emptyfolder"

Exit 0
